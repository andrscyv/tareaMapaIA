(SETQ GRAFO '((12 5 7 1 2 3 4) (2 2 3 A) (4 7 15 C D E) (7 1 8 21 32 43) (8 4 6)))

;;BUSCA UN NODO EN UNA LISTA CON BASE EN SU IDNODO
;;REGRESA (-1) CUANDO NO ENCUENTRA AL NODO
(DEFUN ENCUENTRANODO (IDNODO LISTA)
    (COND
        ((NULL LISTA) '(-1))
        ((= IDNODO (CAR (CAR LISTA))) (CAR LISTA))
        (T (ENCUENTRANODO IDNODO (CDR LISTA)))
    )
)

;;REGRESA UNA LISTA CON LOS IDNODOS DE LOS HIJOS DEL IDNODO BUSCADO
;;USA LA FUNCIÃ“N ENCUENTRANODO PARA LOGRARLO
;;SOLO BUSCA EN LA LISTA LLAMADA GRAFO
;;NO LANZA EXCEPCIONES

(DEFUN DAMEHIJOS (IDNODO)
    (NTHCDR 3 (ENCUENTRANODO IDNODO GRAFO))
)

(DEFUN COSTO (IDNODO1 IDNODO2)
    (LET ((Z (MAPCAR #'- (SUBSEQ (ENCUENTRANODO IDNODO1 GRAFO) 1 3) (SUBSEQ (ENCUENTRANODO IDNODO2 GRAFO) 1 3)))) (SQRT (APPLY #'+ (MAPCAR #'* Z Z))))
)

;;DEBE ENCONTRAR EL NODO CON IDNODO IGUAL A 12
;;BUSCANDO EN LA LISTA GRAFO
(PRINT (ENCUENTRANODO 12 GRAFO))

;;REGRESA UNA LISTA CON LOS HIJOS DEL NODO CON IDNODO IGUAL A 8
(PRINT (DAMEHIJOS 8))

;;REGRESA UNA LISTA CON LOS HIJOS DEL NODO CON IDNODO IGUAL A 4
(PRINT (DAMEHIJOS 4))

;;ENCUENTRA EL COSTO DE IR DEL NODO CON IDNODO 12 A 2
;;USANDO LA DISTANCIA EUCLIDIANA ENTRE LOS DOS NODOS
(PRINT (COSTO 12 2))

;;ENCUENTRA EL COSTO DE IR DEL NODO CON IDNODO 2 A 4
;;USANDO LA DISTANCIA EUCLIDIANA ENTRE LOS DOS NODOS
(PRINT (COSTO 2 4))

